@mixin hvr-fade($color, $bg-color) {
  /*
   * Remove transforms for now because they affect the bounding viewport for
   * modals that otherwise need to be positioned relative to the document
   * window.
   * References:
   * http://stackoverflow.com/questions/21091958/
   *   css-fixed-child-element-positions-relative
   *   -to-parent-element-not-to-the-viewpo
   * https://developer.mozilla.org/en-US/docs/Web/CSS/position#Fixed_positioning
   */
  //-webkit-transform: perspective(1px) translateZ(0);
  //transform: perspective(1px) translateZ(0);

  // Not needed?
  //box-shadow: 0 0 1px transparent;
  //overflow: hidden;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: $color, $bg-color;
  transition-property: $color, $bg-color;
  cursor: pointer;

  &:hover, &:focus, &:active {
    color: $color;
    border-color: $bg-color;
    background-color: $bg-color;
  }
}

@mixin hvr-fade-table($color, $bg-color) {
  // Not needed?
  //box-shadow: 0 0 1px transparent;
  //overflow: hidden;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: $color, $bg-color;
  transition-property: $color, $bg-color;
  cursor: pointer;

  &:hover, &:focus, &:active {
    color: $color;
    background-color: $bg-color;
  }
}

@mixin hvr-color($color) {
  //-webkit-transform: perspective(1px) translateZ(0);
  //transform: perspective(1px) translateZ(0);
  //box-shadow: 0 0 1px transparent;
  //overflow: hidden;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: $color;
  transition-property: $color;
  cursor: pointer;

  &:hover, &:focus, &:active {
    color: $color;
  }
}

@mixin hvr-background($bg-color) {
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: $bg-color;
  transition-property: $bg-color;
  cursor: pointer;

  &:hover, &:focus, &:active {
    background-color: $bg-color;
  }
}

@mixin hvr-shadow($color) {
  //-webkit-transform: perspective(1px) translateZ(0);
  //transform: perspective(1px) translateZ(0);
  //overflow: hidden;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: $color;
  transition-property: $color;
  cursor: pointer;

  &:hover, &:focus, &:active {
    box-shadow: 0px 0px 1px 1px $color;
  }
}

@mixin hvr-outline($base-color, $hvr-color) {
  //-webkit-transform: perspective(1px) translateZ(0);
  //transform: perspective(1px) translateZ(0);
  //box-shadow: 0 0 1px transparent;
  //overflow: hidden;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: $hvr-color;
  transition-property: $hvr-color;
  border: 1px solid $base-color;
  cursor: pointer;

  &:hover, &:focus, &:active {
    border: 1px solid $hvr-color;
  }
}

@mixin hvr-grow($scale) {
  //-webkit-transform: perspective(1px) translateZ(0);
  //transform: perspective(1px) translateZ(0);
  //box-shadow: 0 0 1px transparent;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: transform;
  transition-property: transform;
  cursor: pointer;

  &:hover, &:focus, &:active {
    -webkit-transform: scale($scale);
    transform: scale($scale);
  }
}

@mixin hvr-underline($color) {
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px transparent;
  cursor: pointer;

  &:before {
    content: "";
    position: absolute;
    z-index: -1;
    left: 50%;
    right: 50%;
    bottom: 0;
    background: $color;
    height: 4px;
    -webkit-transition-property: left, right;
    transition-property: left, right;
    -webkit-transition-duration: 0.3s;
    transition-duration: 0.3s;
    -webkit-transition-timing-function: ease-out;
    transition-timing-function: ease-out;
  }
  &:hover:before, &:focus:before, &:active:before {
    left: 0;
    right: 0;
  }
}

@mixin ovc-nav-input($width, $height, $border-color, $color) {
  input {
    width: $width;
    height: $height;
    color: $color;

    background: none;
    padding: 10px;
    margin-bottom: 5px;
    border: 1px $border-color solid;
    border-radius: 5px;
  }
  input:focus {
    outline: none;
  }
}

/* Source: https://github.com/daneden/animate.css */
@mixin animate-slide-in-down($duration) {
  @keyframes slide-in-down {
    from {
      transform: translate3d(0, -100%, 0);
      visibility: visible;
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }
  animation: slide-in-down $duration 1;
}

@mixin animate-slide-out-up($duration) {
  @keyframes slide-out-up {
    from {
      transform: translate3d(0, 0, 0);
    }
    to {
      visibility: hidden;
      transform: translate3d(0, -100%, 0);
    }
  }
  animation: slide-out-up $duration 1;
}

@mixin animate-slide-in-left($duration) {
  @keyframes slide-in-left {
    from {
      transform: translate3d(100%, 0, 0);
      visibility: visible;
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }
  animation: slide-in-left $duration 1;
}

@mixin animate-slide-out-right($duration) {
  @keyframes slide-out-right {
    from {
      transform: translate3d(0, 0, 0);
    }
    to {
      visibility: hidden;
      transform: translate3d(100%, 0, 0);
    }
  }
  animation: slide-out-right $duration 1;
}

@mixin animate-fade-in($duration, $opacity) {
  @keyframes fade-in {
    from {
      background: rgba(0,0,0,0);
      visibility: visible;
    }
    to {
      background: rgba(0,0,0,$opacity);
    }
  }
  animation: fade-in $duration 1;
}


@mixin animate-fade-out($duration, $opacity) {
  @keyframes fade-out {
    from {
      background: rgba(0,0,0,$opacity);
    }
    to {
      background: rgba(0,0,0,0);
      visibility: hidden;
    }
  }
  animation: fade-out $duration 1;
}

